import multiprocessing as mp
import logging
from auth import PeerAuth

if __name__ == "__main__":
    username = "Peer1"

    files_index = [
        {"filename": "video.mp4", "url": f"http://{username}/files/video.mp4"},
        {"filename": "documento.pdf", "url": f"http://{username}/files/documento.pdf"},
    ]

    # Proceso hijo para autenticaci√≥n peri√≥dica
    p1 = mp.Process(target=PeerAuth.peer_sender, args=(username, files_index, 20))
    p1.start()

    try:
        # Men√∫ corre en el proceso principal
        PeerAuth.peer_menu()
    finally:
        logging.info("üõë Terminando proceso de autenticaci√≥n...")
        p1.terminate()
        p1.join()















'''
import time
import multiprocessing as mp
from datetime import datetime
from auth import PeerAuth

def main():
    # Archivos de ejemplo para cada peer
    files_peer1 = [
        {"namefile": "docA.txt", "url": "http://peer1.local/files/docA.txt"},
        {"namefile": "img1.png", "url": "http://peer1.local/files/img1.png"}
    ]

    files_peer2 = [
        {"namefile": "video.mp4", "url": "http://peer2.local/files/video.mp4"},
        {"namefile": "docA.txt", "url": "http://peer2.local/files/docA.txt"}
    ]

    files_peer3 = [
        {"namefile": "presentation.pptx", "url": "http://peer3.local/files/presentation.pptx"},
        {"namefile": "notes.pdf", "url": "http://peer3.local/files/notes.pdf"}
    ]

    configs = [
        ("Peer1", "Peer1", files_peer1, 5.0, 0.0),
        ("Peer2", "Peer2", files_peer2, 7.0, 1.5),
        ("Peer3", "Peer3", files_peer3, 11.0, 0.8),
    ]

    processes = []
    for name, username, files_idx, interval, initial_delay in configs:
        p = mp.Process(
            target=PeerAuth.peer_sender,
            args=(name, username, files_idx, interval, initial_delay),
            daemon=True
        )
        p.start()
        processes.append(p)
        print(f"[{datetime.now().isoformat(timespec='seconds')}] Lanzado {name} (user={username}) con files_index={len(files_idx)} items")

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nDeteniendo procesos...")
        for p in processes:
            p.terminate()
        for p in processes:
            p.join(timeout=2)
        print("Todos los procesos finalizados.")


if __name__ == "__main__":
    main()
'''

'''
def main():
    peer_auth = auth.PeerAuth()
    peer_auth.run()  


if __name__ == "__main__":
    main()
'''