version: "3.9"

services:
  servidor:
    build:
      context: ./API
      dockerfile: dockerfile.api
    container_name: servidor
    volumes:
      - shared_data:/data
    networks:
      redp2p:
        ipv4_address: 172.28.0.2
    ports:
      - "8000:8000"

  p1:
    build:
      context: ./Peer
      dockerfile: dockerfile
    container_name: p1
    stdin_open: true    # Mantiene stdin abierto
    tty: true          # Asigna un pseudo-TTY
    volumes:
      - ./data/dataPeer1:/data
      - ./Peer/configs/peer1.json:/app/configs/peer1.json
    environment:
      - PEER_CONFIG=/app/configs/peer1.json
    networks:
      redp2p:
        ipv4_address: 172.28.0.3
    ports:
      - "8001:8001"

  p2:
    build:
      context: ./Peer
      dockerfile: dockerfile
    container_name: p2
    stdin_open: true    # Mantiene stdin abierto
    tty: true          # Asigna un pseudo-TTY
    volumes:
      - ./data/dataPeer2:/data
      - ./Peer/configs/peer2.json:/app/configs/peer2.json
    environment:
      - PEER_CONFIG=/app/configs/peer2.json
    networks:
      redp2p:
        ipv4_address: 172.28.0.4
    ports:
      - "8002:8002"

  p3:
    build:
      context: ./Peer
      dockerfile: dockerfile
    container_name: p3
    stdin_open: true    # Mantiene stdin abierto
    tty: true          # Asigna un pseudo-TTY
    volumes:
      - ./data/dataPeer3:/data
      - ./Peer/configs/peer3.json:/app/configs/peer3.json
    environment:
      - PEER_CONFIG=/app/configs/peer3.json
    networks:
      redp2p:
        ipv4_address: 172.28.0.5
    ports:
      - "8003:8003"

networks:
  redp2p:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  shared_data:
